{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import remarkGfm from 'remark-gfm'\nimport remarkMath from 'remark-math'\nimport rehypeSlug from 'rehype-slug'\nimport rehypeKatex from 'rehype-katex'\nimport rehypeCodeTitles from 'rehype-code-titles'\nimport rehypePrettyCode from 'rehype-pretty-code'\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings'\nimport { rehypeAccessibleEmojis } from 'rehype-accessible-emojis'\nimport { defineDocumentType, makeSource } from 'contentlayer/source-files'\n\n/** @type {import('contentlayer/types').ContentLayerConfig}*/\nconst computedFields = {\n    slug: {\n        type: 'string',\n        resolve: (doc) => `/${doc._raw.flattenedPath}`,\n    },\n    slugAsParams: {\n        type: 'string',\n        resolve: (doc) => doc._raw.flattenedPath.split('/').slice(1).join('/'),\n    },\n    tagAsParams: {\n        type: 'string',\n        resolve: (doc) => doc.tag.split(' ').join('-').toLowerCase(),\n    },\n}\n\nexport const Post = defineDocumentType(() => ({\n    name: 'Post',\n    filePathPattern: `posts/*.mdx`,\n    contentType: 'mdx',\n    fields: {\n        title: {\n            type: 'string',\n            required: true,\n        },\n        description: {\n            type: 'string',\n        },\n        date: {\n            type: 'date',\n            required: true,\n        },\n        image: {\n            type: 'string',\n        },\n        tag: {\n            type: 'string',\n        },\n        published: {\n            type: 'boolean',\n            default: true,\n        },\n    },\n    computedFields,\n}))\n\nexport const Work = defineDocumentType(() => ({\n    name: 'Work',\n    filePathPattern: `works/*.mdx`,\n    contentType: 'mdx',\n    fields: {\n        title: {\n            type: 'string',\n            required: true,\n        },\n        description: {\n            type: 'string',\n        },\n        date: {\n            type: 'date',\n            required: true,\n        },\n        image: {\n            type: 'string',\n        },\n        tag: {\n            type: 'string',\n        },\n        published: {\n            type: 'boolean',\n            default: true,\n        },\n    },\n    computedFields,\n}))\n\nexport default makeSource ({\n    contentDirPath: './content',\n    documentTypes: [Post, Work],\n    mdx: {\n        remarkPlugins: [remarkGfm, remarkMath],\n        rehypePlugins: [\n            rehypeSlug,\n            rehypeCodeTitles,\n            [\n                rehypePrettyCode,\n                {\n                    theme: 'github-light',\n                    onVisitLine(node) {\n                        if (node.children.length == 0) {\n                            node.children = [{ type: 'text', value: ' ' }]\n                        }\n                    },\n                    onVisitHighlightedLine(node) {\n                        node.properties.className.push('line--highlighted')\n                    },\n                    onVisitHighlightedWord(node) {\n                        node.properties.className = 'word--highlighted'\n                    }\n                }\n            ],\n            [\n                rehypeAutolinkHeadings,\n                {\n                    properties: {\n                        className: ['subheading-anchor'],\n                        ariaLabel: 'Link to section'\n                    }\n                }\n            ],\n            rehypeKatex,\n            rehypeAccessibleEmojis\n        ],\n    },\n    watch: process.env.NODE_ENV === 'development',\n})"],
  "mappings": ";AAAA,OAAO,eAAe;AACtB,OAAO,gBAAgB;AACvB,OAAO,gBAAgB;AACvB,OAAO,iBAAiB;AACxB,OAAO,sBAAsB;AAC7B,OAAO,sBAAsB;AAC7B,OAAO,4BAA4B;AACnC,SAAS,8BAA8B;AACvC,SAAS,oBAAoB,kBAAkB;AAG/C,IAAM,iBAAiB;AAAA,EACnB,MAAM;AAAA,IACF,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,EAChD;AAAA,EACA,cAAc;AAAA,IACV,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACzE;AAAA,EACA,aAAa;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,MAAM,GAAG,EAAE,KAAK,GAAG,EAAE,YAAY;AAAA,EAC/D;AACJ;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,IACV;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,IACV;AAAA,IACA,KAAK;AAAA,MACD,MAAM;AAAA,IACV;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,EACJ;AAAA,EACA;AACJ,EAAE;AAEK,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,IACV;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,IACV;AAAA,IACA,KAAK;AAAA,MACD,MAAM;AAAA,IACV;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,EACJ;AAAA,EACA;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAY;AAAA,EACvB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,IAAI;AAAA,EAC1B,KAAK;AAAA,IACD,eAAe,CAAC,WAAW,UAAU;AAAA,IACrC,eAAe;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,OAAO;AAAA,UACP,YAAY,MAAM;AACd,gBAAI,KAAK,SAAS,UAAU,GAAG;AAC3B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YACjD;AAAA,UACJ;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACtD;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,YAAY;AAAA,UAChC;AAAA,QACJ;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,YAAY;AAAA,YACR,WAAW,CAAC,mBAAmB;AAAA,YAC/B,WAAW;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO,QAAQ,IAAI,aAAa;AACpC,CAAC;",
  "names": []
}
